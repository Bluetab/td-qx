[
  {
    "name": "not",
    "type": "boolean",
    "params": [{ "name": "value", "type": "boolean" }]
  },
  {
    "name": "or",
    "type": "boolean",
    "params": [
      { "name": "arg1", "type": "boolean" },
      { "name": "arg2", "type": "boolean" }
    ]
  },
  {
    "name": "and",
    "type": "boolean",
    "params": [
      { "name": "arg1", "type": "boolean" },
      { "name": "arg2", "type": "boolean" }
    ]
  },
  {
    "name": "eq",
    "type": "boolean",
    "operator": "=",
    "description": "equals",
    "params": [
      { "name": "arg1", "type": "any" },
      { "name": "arg2", "type": "any" }
    ]
  },
  {
    "name": "neq",
    "type": "boolean",
    "operator": "!=",
    "description": "not equal",
    "params": [
      { "name": "arg1", "type": "any" },
      { "name": "arg2", "type": "any" }
    ]
  },
  {
    "name": "gt",
    "type": "boolean",
    "operator": ">",
    "description": "greater than",
    "params": [
      { "name": "arg1", "type": "any" },
      { "name": "arg2", "type": "any" }
    ]
  },
  {
    "name": "gte",
    "type": "boolean",
    "operator": ">=",
    "description": "greater than or equals",
    "params": [
      { "name": "arg1", "type": "any" },
      { "name": "arg2", "type": "any" }
    ]
  },
  {
    "name": "lt",
    "type": "boolean",
    "operator": "<",
    "description": "less than",
    "params": [
      { "name": "arg1", "type": "any" },
      { "name": "arg2", "type": "any" }
    ]
  },
  {
    "name": "lte",
    "type": "boolean",
    "operator": "<=",
    "description": "less than or equals",
    "params": [
      { "name": "arg1", "type": "any" },
      { "name": "arg2", "type": "any" }
    ]
  },
  {
    "name": "empty",
    "type": "boolean",
    "params": [{ "name": "value", "type": "any" }]
  },
  {
    "name": "to_string",
    "type": "string",
    "params": [{ "name": "value", "type": "any" }]
  },
  {
    "name": "substring",
    "type": "string",
    "params": [
      { "name": "value", "type": "string" },
      { "name": "start", "type": "number" },
      { "name": "end", "type": "number" }
    ]
  },
  {
    "name": "uppercase",
    "type": "string",
    "description": "Converts string to uppercase",
    "params": [{ "name": "field", "type": "string" }]
  },
  {
    "name": "lowercase",
    "type": "string",
    "description": "Converts string to lowercase",
    "params": [{ "name": "field", "type": "string" }]
  },
  {
    "name": "concat",
    "type": "string",
    "params": [
      { "name": "arg1", "type": "string" },
      { "name": "arg2", "type": "string" }
    ]
  },
  {
    "name": "contains",
    "type": "boolean",
    "params": [
      { "name": "value", "type": "string" },
      { "name": "contains", "type": "string" }
    ]
  },
  {
    "name": "starts_with",
    "type": "boolean",
    "params": [
      { "name": "value", "type": "string" },
      { "name": "start_string", "type": "string" }
    ]
  },
  {
    "name": "ends_with",
    "type": "boolean",
    "params": [
      { "name": "value", "type": "string" },
      { "name": "end_string", "type": "string" }
    ]
  },
  {
    "name": "match_regex",
    "type": "boolean",
    "description": "Checks if string matches given regular expression",
    "params": [
      {
        "name": "value",
        "type": "string"
      },
      { "name": "regex", "type": "string", "description": "Regular expression" }
    ]
  },
  {
    "name": "length",
    "type": "number",
    "description": "Character count of a string",
    "params": [{ "name": "field", "type": "string" }]
  },
  {
    "name": "cast_as_date",
    "type": "date",
    "params": [
      { "name": "value", "type": "any" },
      { "name": "format", "type": "string" }
    ]
  },
  {
    "name": "cast_as_timestamp",
    "type": "timestamp",
    "params": [{ "name": "value", "type": "string" }]
  },
  {
    "name": "between",
    "type": "boolean",
    "params": [
      {
        "name": "value",
        "type": "number"
      },
      {
        "name": "start_number",
        "type": "number"
      },
      { "name": "end_number", "type": "number" }
    ]
  },
  {
    "name": "min",
    "type": "any",
    "class": "aggregator",
    "params": [{ "name": "expression", "type": "any" }]
  },
  {
    "name": "max",
    "type": "any",
    "class": "aggregator",
    "params": [{ "name": "expression", "type": "any" }]
  },
  {
    "name": "avg",
    "type": "any",
    "class": "aggregator",
    "params": [{ "name": "expression", "type": "any" }]
  },
  {
    "name": "sum",
    "type": "any",
    "class": "aggregator",
    "params": [{ "name": "expression", "type": "any" }]
  },
  {
    "name": "count",
    "type": "number",
    "class": "aggregator",
    "params": [{ "name": "expression", "type": "any" }]
  }
]
